/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dosimetertest;

import java.awt.Dimension;
import java.awt.Rectangle;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jssc.SerialPort;
import static jssc.SerialPort.BAUDRATE_38400;
import jssc.SerialPortException;
import jssc.SerialPortList;
//import static sun.jdbc.odbc.JdbcOdbcObject.hexStringToByteArray;


/**
 *
 * @author gunebakan
 */
public class MainUi extends javax.swing.JFrame {

    /**
     * Creates new form MainUi
     */
    public String portName = "/dev/ttyUSB0";
    
    SerialPort serialPort = new SerialPort(portName);   //"/dev/ttyUSB0");
    
    private boolean portOpen = false;
    
    public MainUi() {
        
        System.out.println("port..");
        
        
        initComponents();
        this.getPortNames();
        
        
        Dimension dim = getToolkit().getScreenSize();  // ekranı ortalamak için
        Rectangle abounds = getBounds();
        setLocation((dim.width - abounds.width) / 2,
        (dim.height - abounds.height) / 2);
        
        
        this.setVisible(true);
        

        // mainui ekranında tarih ve saat için timer.
        TimerTask timerTask = new TimerTask() {
    
        @Override
        public void run() {
         
            if(portOpen){
                checkDosimeter();    
            }
            
            
        }
        };

        Timer timer = new Timer();

        timer.schedule(timerTask, 0, 1000); 


        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        closeReaderButton = new javax.swing.JButton();
        openReaderButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        portnameComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dosimeter Reader Test Program");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeReaderButton.setText("Close Reader");
        closeReaderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeReaderButtonActionPerformed(evt);
            }
        });

        openReaderButton.setText("Open Reader");
        openReaderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openReaderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(closeReaderButton, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                    .addComponent(openReaderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(85, 85, 85))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(openReaderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(closeReaderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 350, 350));

        jLabel1.setText("Serial Ports");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portnameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(portnameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(309, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openReaderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openReaderButtonActionPerformed
        byte[] CDRIVES = hexStringToByteArray("200A0A30313033364634300D");
    
        System.out.println("send open reader command");
        portOpen = true;
        
        //SerialPort serialPort = new SerialPort("/dev/ttyUSB0");
        
        try {
            System.out.println("Port opened: " + serialPort.openPort());
            System.out.println("Params setted: " + serialPort.setParams(BAUDRATE_38400, 8, 1, 0));
            System.out.println("open port command successfully writen to port: " + serialPort.writeBytes(CDRIVES));
            //serialPort.addEventListener(new SerialPortReader());
            System.out.println("Port closed: " + serialPort.closePort());
        }
        catch (SerialPortException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_openReaderButtonActionPerformed

    private void closeReaderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeReaderButtonActionPerformed
        byte[] CDRIVES = hexStringToByteArray("200A0A30313033304633410D");
    System.out.println("send close reader command");
    portOpen = false;
    //SerialPort serialPort = new SerialPort("/dev/ttyUSB0");
        try {
            //serialPort.closePort();
            System.out.println("Port opened: " + serialPort.openPort());
            System.out.println("Params setted: " + serialPort.setParams(BAUDRATE_38400, 8, 1, 0));
            System.out.println("close port command successfully writen to port: " + serialPort.writeBytes(CDRIVES));
            System.out.println("Port closed: " + serialPort.closePort());
        }
        catch (SerialPortException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_closeReaderButtonActionPerformed

    
    public void checkDosimeter(){
    
        byte[] CDRIVES = hexStringToByteArray("200A0A30313046303033370D");
        
        byte[] dataBuffer = new byte[32];
        String bufferString = "";
        
        try {
            serialPort.openPort();
            
            ByteArrayOutputStream outputStream = new ByteArrayOutputStream( );
            serialPort.writeBytes(CDRIVES);
            byte[] buffer = serialPort.readBytes(10);
            outputStream.write(buffer);
            bufferString = Arrays.toString((byte[])buffer);
            
            if("[10, 48, 49, 48, 70, 48, 48, 51, 55, 13]".equals(bufferString)){
                System.out.println(bufferString);
                System.out.println("equals!!");
            }else{
                serialPort.writeBytes(CDRIVES);
                outputStream.write(serialPort.readBytes(13)); // 23 byte data will read
               // serialPort.writeBytes(CDRIVES);
               // outputStream.write(serialPort.readBytes(10));
               // serialPort.writeBytes(CDRIVES);
               // outputStream.write(serialPort.readBytes(3));
                
                
                dataBuffer = outputStream.toByteArray();
                
                bufferString = Arrays.toString((byte[])dataBuffer);
                System.out.println(convert(dataBuffer));
                
                System.out.println(bufferString);
                //String check = "871640";
                String check =  "" + convert(dataBuffer).charAt(7) 
                                    + convert(dataBuffer).charAt(8)
                                    + convert(dataBuffer).charAt(9)
                                    + convert(dataBuffer).charAt(10)
                                    + convert(dataBuffer).charAt(11)
                                    + convert(dataBuffer).charAt(12);
                
                if(check.equals("871640")){
                    
                    JOptionPane.showMessageDialog(null, "Hoş geldiniz Bilal Bey.\n ID no: "+ check, "Hoş Geldiniz!", JOptionPane.INFORMATION_MESSAGE);
                    
                }else if(check.equals("860010")){
                    
                    JOptionPane.showMessageDialog(null, "Hoş geldiniz Mahmut Bey.\n ID no: "+ check, "Hoş Geldiniz!", JOptionPane.INFORMATION_MESSAGE);
                    
                }else{
                    
                    JOptionPane.showMessageDialog(null, "Pardon sesinizi çıkaramadım\n ID no: "+ check, "Hoş Geldiniz!", JOptionPane.INFORMATION_MESSAGE);
                    
                    
                }
                
                System.out.println(check);
                
            }
            
            System.out.println("checking dosimeter...");
            serialPort.closePort();
            
        }
        catch (SerialPortException ex){
            System.out.println(ex);
        } catch (IOException ex) {
            System.out.println(ex);
        }
    
    
    
}
 String convert(byte[] data) {
    StringBuilder sb = new StringBuilder(data.length);
    
    for (int i = 0; i < data.length; ++ i) {
        
        //if (data[i] < 0) throw new IllegalArgumentException();
        
        sb.append((char) data[i]);
    
    }
    return sb.toString();
}   
    
private void getPortNames(){
    
    String[] portNames = SerialPortList.getPortNames();
    
        for(int i = 0; i < portNames.length; i++){
            System.out.println(" port :"+portNames[i]);
            portnameComboBox.addItem(portNames[i]);
            
        }

    
}
public static byte[] hexStringToByteArray(String s) {
    int len = s.length();
    byte[] data = new byte[len / 2];
    for (int i = 0; i < len; i += 2) {
        data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                             + Character.digit(s.charAt(i+1), 16));
    }
    return data;
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeReaderButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton openReaderButton;
    private javax.swing.JComboBox portnameComboBox;
    // End of variables declaration//GEN-END:variables



}
